############################################################################
#     MLwiN User Manual
#
# 7   Modelling the Variance as a Function of Explanatory Variables . . . 89
#
#     Rasbash, J., Steele, F., Browne, W. J. and Goldstein, H. (2012).
#     A User's Guide to MLwiN, v2.26. Centre for Multilevel Modelling,
#     University of Bristol.
############################################################################
#     R script to replicate all analyses using R2MLwiN
#
#     Zhang, Z., Charlton, C., Parker, R, Leckie, G., and Browne, W.J.
#     Centre for Multilevel Modelling, 2012
#     http://www.bristol.ac.uk/cmm/software/R2MLwiN/
############################################################################
## modified by Josephine Walker 3 August 2015 for clarity 

library(R2MLwiN)
# MLwiN folder
mlwin <- getOption("MLwiN_path")
# while (!file.access(mlwin, mode = 1) == 0) {
#   cat("Please specify the root MLwiN folder or the full path to the MLwiN executable:\n")
#   mlwin <- scan(what = character(0), sep = "\n")
#   mlwin <- gsub("\\", "/", mlwin, fixed = TRUE)
# }
# 
##############################################
mlwin <- "C:\\Program Files (x86)\\MLwiN v2.34\\i386\\mlwin.exe"
##############################################
options(MLwiN_path = mlwin)

# 7.1 A level 1 variance function for two groups . . . . . . . . . . . . .89

data(tutorial, package = "R2MLwiN")

# set covmatrix elements to remove from model because there are no students that are both boys and girls
#From runMLwiN help file: 
#clre: a matrix used to define which elements of the random effects matrix to remove (i.e. hold constant at zero). Removes from the random part at level <first row> the covariance matrix element(s) defined by the pair(s) of rows <second row> <third row>. Each column corresponds to a removed entry of the covariance matrix. 
covmatrix <- matrix(, nrow = 3, ncol = 1)
covmatrix[1, 1] <- 1
covmatrix[2, 1] <- "sexboy"
covmatrix[3, 1] <- "sexgirl"
covmatrix

# create dummy variables for boy and girl to use in mymodel1 
# to estimate separate variances (?)
contrasts(tutorial$sex, 2) <- diag(2)
contrasts(tutorial$sex)

# specify a model with no reference/common intercept and separate variances for boys and girls
(mymodel1 <- runMLwiN(normexam ~ 0 + sex + (0 + sex | student), estoptions = list(clre = covmatrix), data = tutorial))

# remove the contrasts for boy and girl 
contrasts(tutorial$sex, 1) <- c(0, 1)
contrasts(tutorial$sex)

# 7.2 Variance functions at level 2 . . . . . . . . . . . . . . . . . . . 95

## model with intercept (as in chapter 2); normexam by previous test score, school as random slope and random intercept (level 2)
(mymodel2 <- runMLwiN(normexam ~ 1 + standlrt + (1 + standlrt | school) + (1 | student), data = tutorial))

# compute individual values of the variance function from the fitted model

l2varfn <- mymodel2@RP["RP2_var_Intercept"] + (2 * mymodel2@RP["RP2_cov_Intercept_standlrt"] * mymodel2@data$standlrt) + 
  (mymodel2@RP["RP2_var_standlrt"] * mymodel2@data$standlrt^2)

varfndata <- as.data.frame(cbind(mymodel2@data$standlrt, l2varfn)[order(mymodel2@data$standlrt), ])
colnames(varfndata) <- c("standlrt", "l2varfn")

# plot the estimated variance at school level by standlrt
plot(varfndata$standlrt, varfndata$l2varfn, type = "l")


# 7.3 Further elaborating the model for the student-level variance . . . .99

## Key point from chapter:
# As we have seen, we can think of the variance of the u1j
# terms, which is 2 u1, in two ways. Firstly, we can think of it as the between-
#   school variation in the slopes. Secondly we can think of it as a coecient in a
# quadratic function that describes how the between-school variation changes
# with respect to standlrt. Both conceptualisations are useful.
# The situation at the student level is dierent. It does not make sense to think
# of the variance of the e1ijs, that is 2
# e1, as the between-student variation in the
# slopes. This is because a student corresponds to only one data point, and it
# is not possible to have a slope through one data point. However, the second
# conceptualisation where 2
# e1 is a coecient in a function that describes how
# between-student variation changes with respect to standlrt is both valid
# and useful. This means that in models with complex level 1 variation we
# do not think of the estimated random parameters as separate variances and
# covariances. Instead we view them as elements in a function that describes
# how the level 1 variation changes with respect to explanatory variables.


## school level random term and student level random term for standlrt
(mymodel3 <- runMLwiN(normexam ~ 1 + standlrt + (1 + standlrt | school) + (1 + standlrt | student), data = tutorial))

# evaluate the function for plotting
l2varfn <- mymodel3@RP["RP2_var_Intercept"] + (2 * mymodel3@RP["RP2_cov_Intercept_standlrt"] * mymodel3@data$standlrt) + 
  (mymodel3@RP["RP2_var_standlrt"] * mymodel3@data$standlrt^2)

l1varfn <- mymodel3@RP["RP1_var_Intercept"] + (2 * mymodel3@RP["RP1_cov_Intercept_standlrt"] * mymodel3@data$standlrt) + 
  (mymodel3@RP["RP1_var_standlrt"] * mymodel3@data$standlrt^2)

varfndata <- as.data.frame(cbind(mymodel3@data$standlrt, l2varfn, l1varfn)[order(mymodel3@data$standlrt), ])
colnames(varfndata) <- c("standlrt", "l2varfn", "l1varfn")

xyplot(l2varfn + l1varfn ~ standlrt, data = varfndata, type = "l")
# between school variation is curved line, straight line is between student variation

# remove superfluous parts of covariance matrix 
covmatrix <- matrix(, nrow = 3, ncol = 3)
covmatrix[1, 1] <- 1
covmatrix[2, 1] <- "standlrt"
covmatrix[3, 1] <- "standlrt"
covmatrix[1, 2] <- 1
covmatrix[2, 2] <- "sexgirl"
covmatrix[3, 2] <- "Intercept"
covmatrix[1, 3] <- 1
covmatrix[2, 3] <- "standlrt"
covmatrix[3, 3] <- "sexgirl"

covmatrix

(mymodel4 <- runMLwiN(normexam ~ 1 + standlrt + sex + (1 + standlrt | school) + (1 + standlrt + sex | student), estoptions = list(clre = covmatrix), 
  data = tutorial))


# add standlrt/girl back to covariance
covmatrix <- matrix(, nrow = 3, ncol = 2)
covmatrix[1, 1] <- 1
covmatrix[2, 1] <- "standlrt"
covmatrix[3, 1] <- "standlrt"
covmatrix[1, 2] <- 1
covmatrix[2, 2] <- "sexgirl"
covmatrix[3, 2] <- "Intercept"

covmatrix

(mymodel5 <- runMLwiN(normexam ~ 1 + standlrt + sex + (1 + standlrt | school) + (1 + standlrt + sex | student), estoptions = list(clre = covmatrix), 
  data = tutorial))

l2varfn <- mymodel5@RP["RP2_var_Intercept"] + (2 * mymodel5@RP["RP2_cov_Intercept_standlrt"] * mymodel5@data$standlrt) + 
  (mymodel5@RP["RP2_var_standlrt"] * mymodel5@data$standlrt^2)

l1varfnboys <- mymodel5@RP["RP1_var_Intercept"] + (2 * mymodel5@RP["RP1_cov_Intercept_standlrt"] * mymodel5@data$standlrt)

l1varfngirls <- mymodel5@RP["RP1_var_Intercept"] + (2 * mymodel5@RP["RP1_cov_Intercept_standlrt"] * mymodel5@data$standlrt) + 
  (2 * mymodel5@RP["RP1_cov_standlrt_sexgirl"] * mymodel5@data$standlrt) + mymodel5@RP["RP1_var_sexgirl"]

varfndata <- as.data.frame(cbind(mymodel5@data$standlrt, l2varfn, l1varfnboys, l1varfngirls)[order(mymodel5@data$standlrt), 
  ])
colnames(varfndata) <- c("standlrt", "l2varfn", "l1varfnboys", "l1varfngirls")

xyplot(l2varfn + l1varfnboys + l1varfngirls ~ standlrt, data = varfndata, type = "l")

#     Chapter learning outcomes . . . . . . . . . . . . . . . . . . . . .106

############################################################################
